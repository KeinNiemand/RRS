<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Pause Variable
paused = false;
//Text that will be drawn in the center of the screen
text = "Paused";
//Color of the box that will be drawn over the screeen
color = c_gray;
//Alpha of the box drawn over the screen
alpha = 0.3;
//Text size
textScale = 2;
//Array that contains all pause menu items
pMenu[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw pause
if paused &amp;&amp; sprite_exists(spr_lastScreen) {
draw_sprite(spr_lastScreen, 0, 0, 0);
//Draw box oveer screen
draw_set_alpha(alpha);
draw_rectangle_colour(0,0,room_width,room_height,color,color,color,color,0);
draw_set_alpha(1);
//Set setting for font
draw_set_font(fnt_large);
draw_set_halign(fa_middle);
draw_set_valign(fa_top);
draw_set_color(c_white);
draw_text_transformed(room_width/2,0, text, textScale,textScale,0);
//Restet draw settings to defaults
draw_set_valign(fa_top);
draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Toggle paused variable
paused = !paused;
//Pause/Unpause the Game
scr_pause(paused);


//Generate/Delete Pause Menu
//Create Pause Menu when paused
if paused {
    pMenu[0] = instance_create(room_width/2, room_height/2-100, obj_changeRoom);
    var backButton = pMenu[0];
    with (backButton) {
    text = "Main Menu";
    targetRoom = rm_menu_main;
    }
}
//Delete Pause Menu when unpaused
else {
    for (var i = 0; i&lt;array_length_1d(pMenu);i++) {
    with(pMenu[i]) {
        instance_destroy(id)
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
