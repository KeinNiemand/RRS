<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_pause</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pre Pausing
event_inherited();
/*save variable value since obj_control is disabled and canot
  be accesed while paused 
  and it is needed to calculate stuff
*/
difficulty = obj_controll.difficulty;
gameTime = obj_controll.gameTime;
modeID = obj_controll.modeID;
currentContinue = obj_controll.currentContinue;
//Pause the game
scr_pause(true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Game Over Screen
/*
MAKES THE SCREEN BLACK
Set box variables to draw a opaque black box
*/
color=c_black;
alpha=1;
//Set Titel of Game Over Menu
text="Game Over"
//Set Text Size
textScale = 1.5;
//set gameEnd (activates the drawing of stats, recived coins, ...) to false
gameEnd = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Stuff

//Calculate continuePrice
continuePrice = 4*sqr(currentContinue);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Game Over Menu


//Creates the button that ends the Game
pMenu[0] = instance_create(room_width/2,room_height,obj_menu_button);
with (pMenu[0]) {
    text = "End Game";
    spriteColor = c_white;
    onClick  = scr_EndGame;
    image_yscale = 2;
    y-= sprite_height;
    font = fnt_large;
}


//Creates continue button
pMenu[1] = instance_create(room_width/2,room_height/4,obj_spriteDrawButton);
var continueButton = pMenu[1];
//set continue button setting
with (continueButton) {
    //Set Text to show continue price
    text = "continue: " + string(other.continuePrice) + "~";
    
    //Set Sprite Color to Green if you can afford to continue else set it to silver
    if(other.continuePrice &lt;= obj_storage.coins)
        spriteColor = c_green;
    else
        spriteColor = c_silver;
    //make font and sprite larger becouse button is ingame
    image_yscale = 2;
    font = fnt_large;
    //set sprite (at the end of the text) to spr_coin
    sprite = spr_coin;
    textColor = c_white;
    //Run scr_continueButtonClick on Click
    onClick = scr_continueButtonClick;
    //(continues the game if you click yes on the dialog)
    onDialogYes = scr_continueButtonYes;
}


//Add Coindisplay
pMenu[2] = instance_create(room_width*0.75 , string_height("Game Over")*2 , obj_coinDisplay);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//paused needs to be ture becouse obj_pause draw event checks if paused is true
paused = true;
event_inherited();
if gameEnd
    scr_EndGameDraw();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
